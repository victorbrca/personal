<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Victor Mendonça</title>
    <link>/post/</link>
    <description>Recent content in Posts on Victor Mendonça</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 07 Nov 2016 23:14:36 -0500</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to Record and Share a Terminal Session</title>
      <link>/post/how-to-record-and-share-a-terminal-session/</link>
      <pubDate>Mon, 07 Nov 2016 23:14:36 -0500</pubDate>
      
      <guid>/post/how-to-record-and-share-a-terminal-session/</guid>
      <description>A while ago I had shared instructions on &amp;ldquo;How to Share a Terminal Window Online&amp;rdquo;. This is great for live support.
Today I&amp;rsquo;m sharing instructions on how to record your terminal session, and not only share it, but also allow users to copy and paste text from the playback video.
The installation could not be easier. And to show how great this utility is, I&amp;rsquo;m showing the instructions using a &amp;ldquo;video&amp;rdquo; recorded with &amp;ldquo;showterm&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>How to Create A Prompt With Timeout in Bash</title>
      <link>/post/how-to-create-a-prompt-with-timeout-in-bash/</link>
      <pubDate>Wed, 19 Oct 2016 23:26:12 -0500</pubDate>
      
      <guid>/post/how-to-create-a-prompt-with-timeout-in-bash/</guid>
      <description>Here&amp;rsquo;s a quick function that will display a prompt with timeout in a bash script:
_myCountdownFunction (){echo-e &amp;#34;Hit \&amp;#34;Ctrl+c\&amp;#34; to quit or \&amp;#34;Enter\&amp;#34; to continue... \c&amp;#34;cnt=5while((cnt &amp;gt;=0));doif((cnt &amp;lt; 9));thenecho-e &amp;#34;\b\b${cnt}s\c&amp;#34;elif((cnt==9));thenecho-e &amp;#34;\b\b\b ${cnt}s\c&amp;#34;elif((cnt &amp;lt;=99));thenecho-e &amp;#34;\b\b\b\b ${cnt}s\c&amp;#34;elif((cnt &amp;lt; 999));thenecho-e &amp;#34;\b\b\b\b${cnt}s\c&amp;#34;firead-t 1my_reply (($?==0))&amp;amp;&amp;amp;exit1letcnt-=1done}  The user will see the following message on his terminal with the seconds counting down in place:
john@ubuntu:~$ Hit &amp;quot;Ctrl+c&amp;quot; to quit or &amp;quot;Enter&amp;quot; to continue... 5s  At the end of the specified time in &amp;lsquo;cnt&amp;rsquo;, the script (where the function would be) will continue executing, and if the user hits &amp;ldquo;Ctrl+c&amp;rdquo; before that, it will exit (both script and function).</description>
    </item>
    
    <item>
      <title>How to Create a Quick Web Server</title>
      <link>/post/how-to-create-a-quick-web-server/</link>
      <pubDate>Fri, 02 Sep 2016 00:01:59 -0500</pubDate>
      
      <guid>/post/how-to-create-a-quick-web-server/</guid>
      <description>Have you ever had the need to create a web server to perform a test? Well, here are a few quick options on how to do this.
Got Netcat? If you have Netcat on the server (which is pretty easy to get), then you can do this.
Example 1: Display the date and the text &amp;ldquo;It works&amp;rdquo;
nc -kl 10001 -c &#39;echo -e &amp;quot;HTTPS/1.1 200 OK\r\n\r\n$(date)\r\n\r\nIt works&amp;quot;&#39;  Example 2: Display an index.</description>
    </item>
    
  </channel>
</rss>